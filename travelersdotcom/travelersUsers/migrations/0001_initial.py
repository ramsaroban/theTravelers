# Generated by Django 3.1.1 on 2020-09-10 21:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('user_type', models.CharField(choices=[('Tourist', 'TOURIST'), ('Guide', 'GUIDE'), ('Travel Agency', 'TRAVEL AGENCY')], default='Tourist', max_length=50, verbose_name='User Type')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, default='', max_length=30, null=True, verbose_name='middle name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is user Verified')),
                ('is_active', models.BooleanField(default=True, verbose_name='is user Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is User Staff')),
                ('is_admin', models.BooleanField(default=False, verbose_name='is user Admin')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='is user Admin')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
